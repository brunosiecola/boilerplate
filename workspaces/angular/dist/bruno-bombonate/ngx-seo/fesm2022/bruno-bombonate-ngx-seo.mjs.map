{"version":3,"file":"bruno-bombonate-ngx-seo.mjs","sources":["../../../../projects/bruno-bombonate/ngx-seo/src/lib/seo.service.ts","../../../../projects/bruno-bombonate/ngx-seo/src/public-api.ts","../../../../projects/bruno-bombonate/ngx-seo/src/bruno-bombonate-ngx-seo.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\r\nimport { Title, Meta } from '@angular/platform-browser';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { filter, map, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SeoService {\r\n\r\n  private readonly title = inject(Title);\r\n  private readonly meta = inject(Meta);\r\n  private readonly router = inject(Router);\r\n  private readonly activatedRoute = inject(ActivatedRoute);\r\n\r\n  public appName: string = '';\r\n\r\n  public setTitle(title: string): void {\r\n    this.title.setTitle(title);\r\n  }\r\n\r\n  public setMeta(meta: any): void {\r\n    this.meta.updateTag(meta);\r\n  }\r\n\r\n  private listenForRouteChanges(): void {\r\n    this.router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd),\r\n      map(() => this.activatedRoute),\r\n      map((activatedRoute: ActivatedRoute) => {\r\n        while (activatedRoute.firstChild) {\r\n          activatedRoute = activatedRoute.firstChild;\r\n        }\r\n        return activatedRoute;\r\n      }),\r\n      filter((activatedRoute: ActivatedRoute) => activatedRoute.outlet === 'primary'),\r\n      mergeMap((activatedRoute: ActivatedRoute) => activatedRoute.data)\r\n    )\r\n      .subscribe((data: undefined | any) => {\r\n        let title = this.appName;\r\n        if (data !== undefined) {\r\n          if (data.title !== undefined) {\r\n            title = `${this.appName}: ${data.title}`;\r\n          }\r\n          if (data.meta !== undefined) {\r\n            if (data.meta.description !== undefined) {\r\n              this.setMeta({ name: 'description', content: data.meta.description });\r\n            }\r\n          }\r\n        }\r\n        this.setTitle(title);\r\n      });\r\n  }\r\n\r\n  public init(appName: string): void {\r\n    this.appName = appName;\r\n    this.listenForRouteChanges();\r\n  }\r\n\r\n}\r\n","/*\r\n * Public API Surface of ngx-seo\r\n */\r\n\r\n// services\r\nexport * from './lib/seo.service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;MAQa,UAAU,CAAA;AAHvB,IAAA,WAAA,GAAA;AAKmB,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACtB,QAAA,IAAA,CAAA,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACpB,QAAA,IAAA,CAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AACxB,QAAA,IAAA,CAAA,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QAElD,IAAO,CAAA,OAAA,GAAW,EAAE,CAAC;AA4C7B,KAAA;AA1CQ,IAAA,QAAQ,CAAC,KAAa,EAAA;AAC3B,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC5B;AAEM,IAAA,OAAO,CAAC,IAAS,EAAA;AACtB,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAC3B;IAEO,qBAAqB,GAAA;AAC3B,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB,MAAM,CAAC,CAAC,KAAU,KAAK,KAAK,YAAY,aAAa,CAAC,EACtD,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,EAC9B,GAAG,CAAC,CAAC,cAA8B,KAAI;AACrC,YAAA,OAAO,cAAc,CAAC,UAAU,EAAE;AAChC,gBAAA,cAAc,GAAG,cAAc,CAAC,UAAU,CAAC;aAC5C;AACD,YAAA,OAAO,cAAc,CAAC;SACvB,CAAC,EACF,MAAM,CAAC,CAAC,cAA8B,KAAK,cAAc,CAAC,MAAM,KAAK,SAAS,CAAC,EAC/E,QAAQ,CAAC,CAAC,cAA8B,KAAK,cAAc,CAAC,IAAI,CAAC,CAClE;AACE,aAAA,SAAS,CAAC,CAAC,IAAqB,KAAI;AACnC,YAAA,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;AACzB,YAAA,IAAI,IAAI,KAAK,SAAS,EAAE;AACtB,gBAAA,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;oBAC5B,KAAK,GAAG,CAAG,EAAA,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,KAAK,CAAA,CAAE,CAAC;iBAC1C;AACD,gBAAA,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;oBAC3B,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;AACvC,wBAAA,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;qBACvE;iBACF;aACF;AACD,YAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACvB,SAAC,CAAC,CAAC;KACN;AAEM,IAAA,IAAI,CAAC,OAAe,EAAA;AACzB,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;8GAjDU,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAV,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAU,cAFT,MAAM,EAAA,CAAA,CAAA,EAAA;;2FAEP,UAAU,EAAA,UAAA,EAAA,CAAA;kBAHtB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACPD;;AAEG;AAEH;;ACJA;;AAEG;;;;"}