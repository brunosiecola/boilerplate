{"version":3,"file":"bruno-bombonate-ngx-forms.mjs","sources":["../../../../projects/bruno-bombonate/ngx-forms/src/lib/components/control-tip/control-tip.component.ts","../../../../projects/bruno-bombonate/ngx-forms/src/lib/components/control-tip/control-tip.component.html","../../../../projects/bruno-bombonate/ngx-forms/src/lib/constants/control-errors.constant.ts","../../../../projects/bruno-bombonate/ngx-forms/src/lib/services/forms.service.ts","../../../../projects/bruno-bombonate/ngx-forms/src/lib/components/control-error/control-error.component.ts","../../../../projects/bruno-bombonate/ngx-forms/src/lib/components/control-error/control-error.component.html","../../../../projects/bruno-bombonate/ngx-forms/src/lib/forms.module.ts","../../../../projects/bruno-bombonate/ngx-forms/src/public-api.ts","../../../../projects/bruno-bombonate/ngx-forms/src/bruno-bombonate-ngx-forms.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'control-tip',\r\n  templateUrl: './control-tip.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ControlTipComponent { }\r\n","<ng-content>\r\n</ng-content>\r\n","import { ControlErrors } from '../interfaces/control-errors.interface';\r\n\r\nexport const CONTROL_ERRORS: ControlErrors = {\r\n  required: () => 'Please fill this field.',\r\n  requiredTrue: () => 'Please fill this field.',\r\n  email: () => 'Please fill the email in the format: yourname@example.com.',\r\n  pattern: () => 'Please fill this field in the correct format.',\r\n  min: (error: any) => `Please enter a value of at least ${error.min}.`,\r\n  max: (error: any) => `Please enter a maximum value of ${error.max}.`,\r\n  minlength: (error: any) => `Please enter at least ${error.requiredLength} characters.`,\r\n  maxlength: (error: any) => `Please enter a maximum of ${error.requiredLength} characters.`\r\n};\r\n","import { Injectable, Optional, Inject } from '@angular/core';\r\nimport { ControlErrors } from '../interfaces/control-errors.interface';\r\nimport { CONTROL_ERRORS } from '../constants/control-errors.constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormsService {\r\n\r\n  public controlErrors: ControlErrors = CONTROL_ERRORS;\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Inject('controlErrorsCustom')\r\n    controlErrorsCustom: undefined | ControlErrors\r\n  ) {\r\n    if (controlErrorsCustom !== undefined) {\r\n      this.controlErrors = {\r\n        ... this.controlErrors,\r\n        ... controlErrorsCustom\r\n      };\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy, inject, Input } from '@angular/core';\r\nimport { FormsService } from '../../services/forms.service';\r\nimport { ControlErrors } from '../../interfaces/control-errors.interface';\r\n\r\n@Component({\r\n  selector: 'control-error',\r\n  templateUrl: './control-error.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ControlErrorComponent {\r\n\r\n  private readonly formsService = inject(FormsService);\r\n\r\n  @Input()\r\n  public controlErrors: null | ControlErrors = null;\r\n\r\n  public get controlErrorMessage(): undefined | string {\r\n    const controlErrors = this.controlErrors;\r\n    if (controlErrors !== null) {\r\n      for (const key in controlErrors) {\r\n        const controlError = this.formsService.controlErrors[key];\r\n        if (controlError === undefined) {\r\n          throw Error(`${key} error is not defined at controlErrors object. If you are using a custom validator use FormsModule.forRoot(controlErrorsCustom).`);\r\n        }\r\n        return controlError(controlErrors[key]);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n}\r\n","{{ controlErrorMessage }}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// components\r\nimport { ControlTipComponent } from './components/control-tip/control-tip.component';\r\nimport { ControlErrorComponent } from './components/control-error/control-error.component';\r\n\r\n// interfaces\r\nimport { ControlErrors } from './interfaces/control-errors.interface';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // components\r\n    ControlTipComponent,\r\n    ControlErrorComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    // components\r\n    ControlTipComponent,\r\n    ControlErrorComponent\r\n  ]\r\n})\r\nexport class FormsModule {\r\n\r\n  public static forRoot(controlErrorsCustom?: ControlErrors): ModuleWithProviders<FormsModule> {\r\n    return {\r\n      ngModule: FormsModule,\r\n      providers: [\r\n        { provide: 'controlErrorsCustom', useValue: controlErrorsCustom }\r\n      ]\r\n    };\r\n  }\r\n\r\n}\r\n","/*\r\n * Public API Surface of ngx-forms\r\n */\r\n\r\n// modules\r\nexport * from './lib/forms.module';\r\n\r\n// components\r\nexport * from './lib/components/control-tip/control-tip.component';\r\nexport * from './lib/components/control-error/control-error.component';\r\n\r\n// services\r\nexport * from './lib/services/forms.service';\r\n\r\n// interfaces\r\nexport * from './lib/interfaces/control-errors.interface';\r\n\r\n// constants\r\nexport * from './lib/constants/control-errors.constant';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}