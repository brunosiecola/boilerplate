{"version":3,"file":"bruno-bombonate-ngx-classes.mjs","sources":["../../../../projects/bruno-bombonate/ngx-classes/src/lib/classes/destroy-ref.class.ts","../../../../projects/bruno-bombonate/ngx-classes/src/lib/interfaces/search-param.interface.ts","../../../../projects/bruno-bombonate/ngx-classes/src/lib/functions/transform-number.function.ts","../../../../projects/bruno-bombonate/ngx-classes/src/lib/functions/transform-string.function.ts","../../../../projects/bruno-bombonate/ngx-classes/src/lib/functions/transform-boolean.function.ts","../../../../projects/bruno-bombonate/ngx-classes/src/lib/functions/transform.function.ts","../../../../projects/bruno-bombonate/ngx-classes/src/lib/classes/list-container.class.ts","../../../../projects/bruno-bombonate/ngx-classes/src/lib/classes/list-component.class.ts","../../../../projects/bruno-bombonate/ngx-classes/src/lib/classes/form-component.class.ts","../../../../projects/bruno-bombonate/ngx-classes/src/public-api.ts","../../../../projects/bruno-bombonate/ngx-classes/src/bruno-bombonate-ngx-classes.ts"],"sourcesContent":["import { inject, DestroyRef } from '@angular/core';\r\n\r\nexport class DestroyRefClass {\r\n\r\n  public readonly destroyRef = inject(DestroyRef);\r\n\r\n}\r\n","\r\nexport enum SearchParamType {\r\n  Param = 'paramMap',\r\n  QueryParam = 'queryParamMap'\r\n}\r\n\r\nexport enum SearchParamValueType {\r\n  Number = 'number',\r\n  String = 'string',\r\n  Boolean = 'boolean'\r\n}\r\n\r\nexport interface SearchParam {\r\n  name: string,\r\n  type: SearchParamType,\r\n  valueType: SearchParamValueType\r\n}\r\n","\r\nexport const transformNumber = (value: any): null | number => {\r\n  const valueTypeOfIsNumber = typeof value === 'number';\r\n  const valueTypeOfIsString = typeof value === 'string';\r\n  const valueIsNotEmpty = value !== '';\r\n  if (valueTypeOfIsNumber) {\r\n    return value;\r\n  } else if (valueTypeOfIsString && valueIsNotEmpty) {\r\n    const valueInNumber = +value;\r\n    const valueIsNumber = isNaN(valueInNumber) === false;\r\n    if (valueIsNumber) {\r\n      return valueInNumber;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","\r\nexport const transformString = (value: any): null | string => {\r\n  const valueTypeOfIsNumber = typeof value === 'number';\r\n  const valueTypeOfIsBoolean = typeof value === 'boolean';\r\n  const valueIsNotEmpty = value !== '';\r\n  if (valueTypeOfIsNumber) {\r\n    return value.toString();\r\n  } else if (valueTypeOfIsBoolean) {\r\n    return value.toString();\r\n  } else if (valueIsNotEmpty) {\r\n    return value;\r\n  }\r\n  return null;\r\n}\r\n","\r\nexport const transformBoolean = (value: any): null | boolean => {\r\n  const valueTypeOfIsBoolean = typeof value === 'boolean';\r\n  const valueTypeOfIsString = typeof value === 'string';\r\n  if (valueTypeOfIsBoolean) {\r\n    return value;\r\n  } else if (valueTypeOfIsString) {\r\n    if (value === 'true') {\r\n      return true;\r\n    } else if (value === 'false') {\r\n      return false;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import { SearchParam } from '../interfaces/search-param.interface';\r\nimport { SearchParamValueType } from '../interfaces/search-param.interface';\r\nimport { transformNumber } from './transform-number.function';\r\nimport { transformString } from './transform-string.function';\r\nimport { transformBoolean } from './transform-boolean.function';\r\n\r\nexport const transform = (searchParam: SearchParam, searchParamValue: any): any => {\r\n  if (searchParam.valueType === SearchParamValueType.Number) {\r\n    return transformNumber(searchParamValue);\r\n  } else if (searchParam.valueType === SearchParamValueType.String) {\r\n    return transformString(searchParamValue);\r\n  } else if (searchParam.valueType === SearchParamValueType.Boolean) {\r\n    return transformBoolean(searchParamValue);\r\n  }\r\n  return null;\r\n}\r\n","import { Directive, inject } from '@angular/core';\r\nimport { DestroyRefClass } from './destroy-ref.class';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SearchParam, SearchParamType, SearchParamValueType } from '../interfaces/search-param.interface';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { transform } from '../functions/transform.function';\r\n\r\n@Directive()\r\nexport class ListContainerClass extends DestroyRefClass {\r\n\r\n  protected readonly activatedRoute = inject(ActivatedRoute);\r\n  protected readonly router = inject(Router);\r\n\r\n  public listSearchParamsList: SearchParam[] = [];\r\n  public listSearchParams: any = { };\r\n\r\n  public list: any[] = [];\r\n  public listLength: number = 0;\r\n  public listLimit: number = 20;\r\n  public listLoading: boolean = false;\r\n\r\n  protected setListSearchParams(): void {\r\n\r\n    const listSearchParamsList = [\r\n      { name: 'page', type: SearchParamType.QueryParam, valueType: SearchParamValueType.Number },\r\n      ... this.listSearchParamsList\r\n    ];\r\n\r\n    listSearchParamsList.forEach((searchParam) => {\r\n      const searchParamValue = this.activatedRoute.snapshot[searchParam.type].get(searchParam.name);\r\n      if (searchParamValue !== null) {\r\n        this.listSearchParams[searchParam.name] = transform(searchParam, searchParamValue);\r\n      } else {\r\n        if (searchParam.name === 'page') {\r\n          this.listSearchParams[searchParam.name] = 1;\r\n        } else {\r\n          this.listSearchParams[searchParam.name] = null;\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  protected getHttpParamsString(): string {\r\n\r\n    const listSearchParamsExcludingNulls: any = { };\r\n\r\n    this.listSearchParamsList.forEach((searchParam) => {\r\n      const searchParamValue = this.listSearchParams[searchParam.name];\r\n      if (searchParamValue !== null) {\r\n        listSearchParamsExcludingNulls[searchParam.name] = searchParamValue;\r\n      }\r\n    });\r\n\r\n    let httpParams = new HttpParams({ fromObject: listSearchParamsExcludingNulls });\r\n    httpParams = httpParams.appendAll({\r\n      offset: (this.listSearchParams.page - 1) * this.listLimit,\r\n      limit: this.listLimit\r\n    });\r\n\r\n    return httpParams.toString();\r\n\r\n  }\r\n\r\n  protected getList(): void { }\r\n\r\n  public ngOnInit(): void {\r\n\r\n    this.setListSearchParams();\r\n\r\n    this.activatedRoute.queryParams\r\n      .pipe(takeUntilDestroyed(this.destroyRef))\r\n      .subscribe(() => this.getList());\r\n\r\n  }\r\n\r\n  public handleListSearchFormChange(value: any): void {\r\n\r\n    this.listSearchParams.page = 1;\r\n\r\n    this.listSearchParamsList.forEach((searchParam) => {\r\n      const searchParamValue = value[searchParam.name];\r\n      if (searchParamValue !== undefined) {\r\n        this.listSearchParams[searchParam.name] = transform(searchParam, searchParamValue);\r\n      }\r\n    });\r\n\r\n    const listSearchParamsExcludingTypeParam = { ... this.listSearchParams };\r\n\r\n    this.listSearchParamsList.forEach((searchParams) => {\r\n      if (searchParams.type === SearchParamType.Param) {\r\n        delete listSearchParamsExcludingTypeParam[searchParams.name];\r\n      }\r\n    });\r\n\r\n    this.router.navigate(['.'], { relativeTo: this.activatedRoute, queryParams: listSearchParamsExcludingTypeParam });\r\n\r\n  }\r\n\r\n  public handleListPageChange(pageEvent: any): void {\r\n\r\n    this.listSearchParams.page = pageEvent.pageIndex + 1;\r\n\r\n    const listSearchParamsExcludingTypeParam = { ... this.listSearchParams };\r\n\r\n    this.listSearchParamsList.forEach((searchParams) => {\r\n      if (searchParams.type === SearchParamType.Param) {\r\n        delete listSearchParamsExcludingTypeParam[searchParams.name];\r\n      }\r\n    });\r\n\r\n    this.router.navigate(['.'], { relativeTo: this.activatedRoute, queryParams: listSearchParamsExcludingTypeParam });\r\n\r\n  }\r\n\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\n\r\n@Directive()\r\nexport abstract class ListComponentClass {\r\n\r\n  @Input()\r\n  public list: any[] = [];\r\n\r\n}\r\n","import { Directive, OnChanges, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\r\nimport { DestroyRefClass } from './destroy-ref.class';\r\nimport { FormGroup, AbstractControl, FormControl } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { distinctUntilChanged, debounceTime } from 'rxjs/operators';\r\n\r\n@Directive()\r\nexport abstract class FormComponentClass extends DestroyRefClass implements OnChanges, OnInit {\r\n\r\n  @Input()\r\n  public form: FormGroup = new FormGroup({ });\r\n\r\n  @Input()\r\n  public formData: undefined | any = undefined;\r\n\r\n  @Input()\r\n  public formLoading: boolean = false;\r\n\r\n  @Input()\r\n  public formReset: undefined | Subject<void> = undefined;\r\n\r\n  @Output()\r\n  public formChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output()\r\n  public formBack: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output()\r\n  public formSubmit: EventEmitter<any> = new EventEmitter();\r\n\r\n  protected mapInputValue(value: any): any {\r\n    return value;\r\n  }\r\n\r\n  protected mapOutputValue(value: any): any {\r\n    return value;\r\n  }\r\n\r\n  public ngOnChanges(simpleChanges: SimpleChanges): void {\r\n    if (simpleChanges && simpleChanges['formData'] && simpleChanges['formData'].firstChange) {\r\n      const valueMapped = this.mapInputValue(simpleChanges['formData'].currentValue);\r\n      this.form.patchValue(valueMapped, { emitEvent: false });\r\n    }\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n\r\n    this.form.valueChanges\r\n      .pipe(\r\n        takeUntilDestroyed(this.destroyRef),\r\n        distinctUntilChanged(),\r\n        debounceTime(500)\r\n      )\r\n      .subscribe(() => {\r\n        const valueMapped = this.mapOutputValue(this.form.value);\r\n        this.formChange.emit(valueMapped);\r\n      });\r\n\r\n    if (this.formReset !== undefined) {\r\n      this.formReset\r\n        .pipe(takeUntilDestroyed(this.destroyRef))\r\n        .subscribe(() => this.form.reset());\r\n    }\r\n\r\n  }\r\n\r\n  public controlErrorMessageIsVisible(control: AbstractControl | FormControl): boolean {\r\n    const controlErrorsIsNotNull = control.errors !== null;\r\n    const controlTouchedIsTrue = control.touched === true;\r\n    const controlDirtyIsTrue = control.dirty === true;\r\n    return controlErrorsIsNotNull && (controlTouchedIsTrue || controlDirtyIsTrue);\r\n  }\r\n\r\n  public handleNgSubmit(): void {\r\n    this.form.markAllAsTouched();\r\n    if (this.form.valid === true && this.formLoading === false) {\r\n      this.formLoading = true;\r\n      const valueMapped = this.mapOutputValue(this.form.value);\r\n      this.formSubmit.emit(valueMapped);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Public API Surface of ngx-classes\r\n */\r\n\r\n// classes\r\nexport * from './lib/classes/destroy-ref.class';\r\nexport * from './lib/classes/list-container.class';\r\nexport * from './lib/classes/list-component.class';\r\nexport * from './lib/classes/form-component.class';\r\n\r\n// interfaces\r\nexport * from './lib/interfaces/search-param.interface';\r\n\r\n// functions\r\nexport * from './lib/functions/transform-number.function'\r\nexport * from './lib/functions/transform-string.function'\r\nexport * from './lib/functions/transform-boolean.function'\r\nexport * from './lib/functions/transform.function'\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}